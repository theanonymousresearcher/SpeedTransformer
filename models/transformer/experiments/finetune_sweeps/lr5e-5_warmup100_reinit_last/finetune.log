2025-09-06 21:53:35,376 - INFO - Initializing DataProcessor for fine-tuning...
Extracting unique trajectory IDs...
Reading traj_ids: 0it [00:00, ?it/s]Reading traj_ids: 1it [00:00,  3.66it/s]Reading traj_ids: 2it [00:00,  3.69it/s]Reading traj_ids: 3it [00:00,  3.68it/s]Reading traj_ids: 4it [00:01,  3.68it/s]Reading traj_ids: 5it [00:01,  4.56it/s]Reading traj_ids: 5it [00:01,  4.12it/s]
Total unique traj_ids found: 9347
Splitting traj_ids into train, validation, and test sets...
Train: 93, Val: 1869, Test: 7385
Fitting label encoder on target column...
Reading labels for encoding: 0it [00:00, ?it/s]Reading labels for encoding: 1it [00:00,  4.09it/s]Reading labels for encoding: 2it [00:00,  4.11it/s]Reading labels for encoding: 3it [00:00,  4.15it/s]Reading labels for encoding: 4it [00:00,  4.16it/s]Reading labels for encoding: 5it [00:01,  5.19it/s]Reading labels for encoding: 5it [00:01,  4.50it/s]
Classes found: ['bike' 'bus' 'car' 'train' 'walk']
Fitting scaler on training features...
Reading training features for scaling: 0it [00:00, ?it/s]Reading training features for scaling: 1it [00:00,  2.98it/s]Reading training features for scaling: 2it [00:00,  3.00it/s]Reading training features for scaling: 3it [00:00,  3.03it/s]Reading training features for scaling: 4it [00:01,  3.07it/s]Reading training features for scaling: 5it [00:01,  3.50it/s]Reading training features for scaling: 5it [00:01,  3.27it/s]
Scaler fitting completed.
Creating sequences in sliding windows...
Processing chunks: 0it [00:00, ?it/s]Processing chunks: 1it [00:02,  2.15s/it]Processing chunks: 2it [00:03,  1.77s/it]Processing chunks: 3it [00:05,  1.76s/it]Processing chunks: 4it [00:07,  1.83s/it]Processing chunks: 5it [00:08,  1.56s/it]Processing chunks: 5it [00:08,  1.69s/it]
Train: 899, Val: 16344, Test: 55763
Skipped sequences (zero length): 0
Creating sequences in sliding windows...
Processing chunks: 0it [00:00, ?it/s]Processing chunks: 1it [00:01,  1.81s/it]Processing chunks: 2it [00:03,  1.61s/it]Processing chunks: 3it [00:05,  1.90s/it]Processing chunks: 4it [00:08,  2.19s/it]Processing chunks: 5it [00:08,  1.66s/it]Processing chunks: 5it [00:08,  1.78s/it]Train: 899, Val: 16344, Test: 55763
Skipped sequences (zero length): 0
2025-09-06 21:53:59,934 - INFO - Loading pretrained model from: /data/A-SpeedTransformer/models/transformer_/experiments/mobis_transformer_sweeps/mobis_lr1e-4_bs512_h8_d128_kv4_do0.1/mobis_lr1e-4_bs512_h8_d128_kv4_do0.1/best_model.pth
2025-09-06 21:53:59,964 - INFO - Reinitialized: Layer 3
2025-09-06 21:53:59,965 - INFO - Added warmup scheduler with 100 steps
2025-09-06 21:53:59,967 - INFO - [Epoch 1/50]

/data/A-SpeedTransformer/models/transformer_/model_utils.py:231: FutureWarning: `torch.cuda.amp.GradScaler(args...)` is deprecated. Please use `torch.amp.GradScaler('cuda', args...)` instead.
  self.scaler = torch.cuda.amp.GradScaler() if (use_amp and torch.cuda.is_available()) else None
/data/A-SpeedTransformer/models/transformer_/model_utils.py:361: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  state = torch.load(path, map_location=self.device)
/data/A-SpeedTransformer/models/transformer_/model_utils.py:289: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.
  with torch.cuda.amp.autocast():
/data/oe23/torchgpu/lib/python3.8/site-packages/torch/optim/lr_scheduler.py:216: UserWarning: Detected call of `lr_scheduler.step()` before `optimizer.step()`. In PyTorch 1.1.0 and later, you should call them in the opposite order: `optimizer.step()` before `lr_scheduler.step()`.  Failure to do this will result in PyTorch skipping the first value of the learning rate schedule. See more details at https://pytorch.org/docs/stable/optim.html#how-to-adjust-learning-rate
  warnings.warn(
2025-09-06 21:54:03,692 - INFO - Train Loss: 1.5029, Train Acc: 0.3960
2025-09-06 21:54:03,692 - INFO - Val   Loss: 1.4490, Val   Acc: 0.6079
2025-09-06 21:54:03,732 - INFO -   -> Best fine-tuned model saved.
2025-09-06 21:54:03,733 - INFO - [Epoch 2/50]
/data/A-SpeedTransformer/models/transformer_/model_utils.py:326: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.
  with torch.cuda.amp.autocast(enabled=self.scaler is not None):
2025-09-06 21:54:07,097 - INFO - Train Loss: 1.5062, Train Acc: 0.4049
2025-09-06 21:54:07,097 - INFO - Val   Loss: 1.4477, Val   Acc: 0.6085
2025-09-06 21:54:07,134 - INFO -   -> Best fine-tuned model saved.
2025-09-06 21:54:07,135 - INFO - [Epoch 3/50]
2025-09-06 21:54:10,284 - INFO - Train Loss: 1.4948, Train Acc: 0.3971
2025-09-06 21:54:10,284 - INFO - Val   Loss: 1.4430, Val   Acc: 0.6103
2025-09-06 21:54:10,325 - INFO -   -> Best fine-tuned model saved.
2025-09-06 21:54:10,326 - INFO - [Epoch 4/50]
2025-09-06 21:54:13,652 - INFO - Train Loss: 1.4800, Train Acc: 0.4004
2025-09-06 21:54:13,653 - INFO - Val   Loss: 1.4362, Val   Acc: 0.6132
2025-09-06 21:54:13,725 - INFO -   -> Best fine-tuned model saved.
2025-09-06 21:54:13,726 - INFO - [Epoch 5/50]
2025-09-06 21:54:16,973 - INFO - Train Loss: 1.4777, Train Acc: 0.4116
2025-09-06 21:54:16,974 - INFO - Val   Loss: 1.4277, Val   Acc: 0.6166
2025-09-06 21:54:17,035 - INFO -   -> Best fine-tuned model saved.
2025-09-06 21:54:17,035 - INFO - [Epoch 6/50]
2025-09-06 21:54:20,390 - INFO - Train Loss: 1.4716, Train Acc: 0.4305
2025-09-06 21:54:20,391 - INFO - Val   Loss: 1.4174, Val   Acc: 0.6202
2025-09-06 21:54:20,439 - INFO -   -> Best fine-tuned model saved.
2025-09-06 21:54:20,439 - INFO - [Epoch 7/50]
2025-09-06 21:54:23,775 - INFO - Train Loss: 1.4797, Train Acc: 0.4260
2025-09-06 21:54:23,776 - INFO - Val   Loss: 1.4052, Val   Acc: 0.6235
2025-09-06 21:54:23,849 - INFO -   -> Best fine-tuned model saved.
2025-09-06 21:54:23,851 - INFO - [Epoch 8/50]
2025-09-06 21:54:27,148 - INFO - Train Loss: 1.4454, Train Acc: 0.4249
2025-09-06 21:54:27,149 - INFO - Val   Loss: 1.3921, Val   Acc: 0.6265
2025-09-06 21:54:27,231 - INFO -   -> Best fine-tuned model saved.
2025-09-06 21:54:27,232 - INFO - [Epoch 9/50]
2025-09-06 21:54:30,574 - INFO - Train Loss: 1.4265, Train Acc: 0.4360
2025-09-06 21:54:30,575 - INFO - Val   Loss: 1.3793, Val   Acc: 0.6284
2025-09-06 21:54:30,630 - INFO -   -> Best fine-tuned model saved.
2025-09-06 21:54:30,631 - INFO - [Epoch 10/50]
2025-09-06 21:54:33,746 - INFO - Train Loss: 1.4057, Train Acc: 0.4461
2025-09-06 21:54:33,747 - INFO - Val   Loss: 1.3655, Val   Acc: 0.6312
2025-09-06 21:54:33,794 - INFO -   -> Best fine-tuned model saved.
2025-09-06 21:54:33,795 - INFO - [Epoch 11/50]
2025-09-06 21:54:37,192 - INFO - Train Loss: 1.4021, Train Acc: 0.4483
2025-09-06 21:54:37,193 - INFO - Val   Loss: 1.3512, Val   Acc: 0.6328
2025-09-06 21:54:37,244 - INFO -   -> Best fine-tuned model saved.
2025-09-06 21:54:37,245 - INFO - [Epoch 12/50]
2025-09-06 21:54:40,430 - INFO - Train Loss: 1.3743, Train Acc: 0.4705
2025-09-06 21:54:40,431 - INFO - Val   Loss: 1.3384, Val   Acc: 0.6336
2025-09-06 21:54:40,466 - INFO -   -> Best fine-tuned model saved.
2025-09-06 21:54:40,467 - INFO - [Epoch 13/50]
2025-09-06 21:54:43,838 - INFO - Train Loss: 1.3392, Train Acc: 0.4661
2025-09-06 21:54:43,839 - INFO - Val   Loss: 1.3247, Val   Acc: 0.6350
2025-09-06 21:54:43,904 - INFO -   -> Best fine-tuned model saved.
2025-09-06 21:54:43,905 - INFO - [Epoch 14/50]
2025-09-06 21:54:47,269 - INFO - Train Loss: 1.3232, Train Acc: 0.4772
2025-09-06 21:54:47,269 - INFO - Val   Loss: 1.3111, Val   Acc: 0.6367
2025-09-06 21:54:47,311 - INFO -   -> Best fine-tuned model saved.
2025-09-06 21:54:47,311 - INFO - [Epoch 15/50]
2025-09-06 21:54:50,521 - INFO - Train Loss: 1.3029, Train Acc: 0.4861
2025-09-06 21:54:50,521 - INFO - Val   Loss: 1.2972, Val   Acc: 0.6375
2025-09-06 21:54:50,564 - INFO -   -> Best fine-tuned model saved.
2025-09-06 21:54:50,564 - INFO - [Epoch 16/50]
2025-09-06 21:54:53,874 - INFO - Train Loss: 1.2858, Train Acc: 0.5028
2025-09-06 21:54:53,875 - INFO - Val   Loss: 1.2834, Val   Acc: 0.6373
2025-09-06 21:54:53,877 - INFO -   -> No improvement (1/7)
2025-09-06 21:54:53,878 - INFO - [Epoch 17/50]
2025-09-06 21:54:57,088 - INFO - Train Loss: 1.2460, Train Acc: 0.5050
2025-09-06 21:54:57,088 - INFO - Val   Loss: 1.2689, Val   Acc: 0.6378
2025-09-06 21:54:57,123 - INFO -   -> Best fine-tuned model saved.
2025-09-06 21:54:57,124 - INFO - [Epoch 18/50]
2025-09-06 21:55:00,477 - INFO - Train Loss: 1.2326, Train Acc: 0.5050
2025-09-06 21:55:00,478 - INFO - Val   Loss: 1.2543, Val   Acc: 0.6380
2025-09-06 21:55:00,520 - INFO -   -> Best fine-tuned model saved.
2025-09-06 21:55:00,521 - INFO - [Epoch 19/50]
2025-09-06 21:55:03,874 - INFO - Train Loss: 1.2032, Train Acc: 0.5095
2025-09-06 21:55:03,875 - INFO - Val   Loss: 1.2392, Val   Acc: 0.6376
2025-09-06 21:55:03,877 - INFO -   -> No improvement (1/7)
2025-09-06 21:55:03,877 - INFO - [Epoch 20/50]
2025-09-06 21:55:07,042 - INFO - Train Loss: 1.1549, Train Acc: 0.5284
2025-09-06 21:55:07,043 - INFO - Val   Loss: 1.2231, Val   Acc: 0.6372
2025-09-06 21:55:07,045 - INFO -   -> No improvement (2/7)
2025-09-06 21:55:07,046 - INFO - [Epoch 21/50]
2025-09-06 21:55:10,367 - INFO - Train Loss: 1.1266, Train Acc: 0.5406
2025-09-06 21:55:10,367 - INFO - Val   Loss: 1.2067, Val   Acc: 0.6369
2025-09-06 21:55:10,370 - INFO -   -> No improvement (3/7)
2025-09-06 21:55:10,370 - INFO - [Epoch 22/50]
2025-09-06 21:55:13,559 - INFO - Train Loss: 1.1010, Train Acc: 0.5528
2025-09-06 21:55:13,560 - INFO - Val   Loss: 1.1898, Val   Acc: 0.6356
2025-09-06 21:55:13,562 - INFO -   -> No improvement (4/7)
2025-09-06 21:55:13,563 - INFO - [Epoch 23/50]
2025-09-06 21:55:16,893 - INFO - Train Loss: 1.0596, Train Acc: 0.5528
2025-09-06 21:55:16,894 - INFO - Val   Loss: 1.1714, Val   Acc: 0.6341
2025-09-06 21:55:16,896 - INFO -   -> No improvement (5/7)
2025-09-06 21:55:16,897 - INFO - [Epoch 24/50]
2025-09-06 21:55:20,223 - INFO - Train Loss: 1.0267, Train Acc: 0.5684
2025-09-06 21:55:20,224 - INFO - Val   Loss: 1.1513, Val   Acc: 0.6311
2025-09-06 21:55:20,226 - INFO -   -> No improvement (6/7)
2025-09-06 21:55:20,226 - INFO - [Epoch 25/50]
2025-09-06 21:55:23,636 - INFO - Train Loss: 0.9956, Train Acc: 0.5762
2025-09-06 21:55:23,637 - INFO - Val   Loss: 1.1304, Val   Acc: 0.6289
2025-09-06 21:55:23,640 - INFO -   -> No improvement (7/7)
2025-09-06 21:55:23,640 - INFO - Early stopping triggered.
2025-09-06 21:55:23,641 - INFO - 
Loading best fine-tuned model from /data/A-SpeedTransformer/models/transformer_/experiments/finetune_sweeps/lr5e-5_warmup100_reinit_last/best_model.pth for final evaluation...
2025-09-06 21:55:40,894 - INFO - Test Loss: 1.2840, Test Accuracy: 0.6651
2025-09-06 21:55:40,953 - INFO - Classification Report:
              precision    recall  f1-score   support

        bike       0.83      0.81      0.82      9168
         bus       0.61      0.90      0.72     13865
         car       0.23      0.25      0.24      8257
       train       0.98      0.11      0.20     10011
        walk       0.85      0.98      0.91     14462

    accuracy                           0.67     55763
   macro avg       0.70      0.61      0.58     55763
weighted avg       0.72      0.67      0.62     55763

2025-09-06 21:55:41,396 - INFO - Saved confusion_matrix_finetune.png
/data/A-SpeedTransformer/models/transformer_/model_utils.py:349: FutureWarning: `torch.cuda.amp.autocast(args...)` is deprecated. Please use `torch.amp.autocast('cuda', args...)` instead.
  with torch.cuda.amp.autocast(enabled=self.scaler is not None):
